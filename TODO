v0.1.0 
node sort.js filename
node sort.js wrongFilename
node sort.js filename(emptyFile)

--done-- create sortLib and testSortLib.
--done-- create loadContent to read content from the file. 
--done-- create sortContent to sort given fileLines. 
--done-- modify loadContent to detect error if the file path is not present and return the error. 
--done-- remove the logic of deciding the error printing from main.
--done-- check the behavior for emptyFile.

------------------------------------------------------------------------------------------------------------------

v0.2.0 
node sort.js -r filename 
node sort.js -r filename -r -r

write appTestFor these above conditions first

* add -r option to the sort
  * create a user argument parser(parseUserArgs) 
  * change the input for sortContent from a string to object with fileLines and options array.
  * add a validateUserArgs helper function for parseUserArgs. 
  
  * implement -r option in sortContent. 
  * parameter input format for sortContent. 
  
  * include parseUserArgs in the flow. 
  


